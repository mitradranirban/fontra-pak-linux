name: Build and Release Linux Binary
on:
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron: "21 1 * * 1-6"
  workflow_dispatch: # allow manual trigger
  # push:
  #   branches: [ main ]
  # pull_request:
  #   branches: [ main ]


jobs:
  build-ubuntu-binary:
    runs-on: ubuntu-latest

    steps:
      - name: Git checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install -r requirements-dev.txt

      - name: Build exe
        run: |
          pyinstaller FontraPak.spec -y
          mv dist/Fontra\ Pak dist/fontrapak

      - name: Run tests
        run: |
          pytest

      - name: Query __version__ string and add to version.txt
        id: query-version
        run: |
          echo $(python -c "import fontra; print(fontra.__version__)") > ./dist/version.txt
      - name: Storing Ubuntu Artifacts
        id: upload_artifact
        uses: actions/upload-artifact@v4
        with:
          name: fontrapak
          path: ./dist/*
  release-with-tag:
    runs-on: ubuntu-latest
    needs: [build-ubuntu-binary]
    if: github.ref == 'refs/heads/main'

    steps:

      - name: Retrieve Artifact
        uses: actions/download-artifact@v4
        with:
          path: ./dl
      - name: make binary executable
        run: chmod +x ./dl/fontrapak/fontrapak
      - name: Display structure of downloaded files
        run: ls -R
        working-directory: ./dl
      - name: tar gzip file
        run: |
          cd ./dl
          tar -czvf fontrapak.tgz "fontrapak"

      # Read version.txt into a variable
      - name: Get version from version.txt
        id: get_version
        run: |
          version=$(cat ./dl/fontrapak/version.txt)
          # Remove whitespace if necessary
          version=$(echo "$version" | tr -d '[:space:]')
          echo "version=$version" >> $GITHUB_OUTPUT

      # Create GitHub Release with the tag from version.txt
      # - name: Create Release
      #  id: create_release
      #  uses: ncipollo/release-action@v1
      #  with:
       #   tag: ${{ steps.get_version.outputs.version }}
      #    name: Release ${{ steps.get_version.outputs.version }}
       #   body: Automated release for ${{ steps.get_version.outputs.version }}
       #   draft: false
       #   prerelease: false

      # Upload fontrapak tarball as a release asset
      - name: Upload fontrapak binary
        uses: softprops/action-gh-release@v2
        with:
          files: ./dl/fontrapak.tgz
          tag_name: ${{ steps.get_version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
